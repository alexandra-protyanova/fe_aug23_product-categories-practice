{"version":3,"sources":["api/users.ts","api/categories.ts","types/ColumnNames.ts","components/PeopleTable.tsx","components/Filters.tsx","App.tsx","api/products.ts","index.tsx"],"names":["users","id","name","sex","categories","title","icon","ownerId","ColumnNames","PeopleTable","products","sortBy","isReversed","setSortBy","setIsReversed","className","Object","values","map","columnName","href","onClick","newColumnName","secondClick","thirdClick","undefined","toggleSortBy","cn","user","category","product","Filters","selectedUserId","setSelectedUserId","query","setQuery","selectedCategoriesIds","setSelectedCategoriesIds","type","placeholder","value","onChange","event","target","length","includes","categoryId","filter","find","c","u","App","useState","visibleProducts","goods","normalizedQuery","trim","toLowerCase","sort","a","b","ID","Products","localeCompare","Category","User","reverse","getVisibleProducts","ReactDOM","render","document","getElementById"],"mappings":"uPAEaA,G,MAAgB,CAC3B,CAAEC,GAAI,EAAGC,KAAM,OAAQC,IAAK,KAC5B,CAAEF,GAAI,EAAGC,KAAM,OAAQC,IAAK,KAC5B,CAAEF,GAAI,EAAGC,KAAM,MAAOC,IAAK,KAC3B,CAAEF,GAAI,EAAGC,KAAM,OAAQC,IAAK,OCJjBC,EAAyB,CACpC,CACEH,GAAI,EACJI,MAAO,UACPC,KAAM,eACNC,QAAS,GAEX,CACEN,GAAI,EACJI,MAAO,SACPC,KAAM,eACNC,QAAS,GAEX,CACEN,GAAI,EACJI,MAAO,SACPC,KAAM,eACNC,QAAS,GAEX,CACEN,GAAI,EACJI,MAAO,cACPC,KAAM,eACNC,QAAS,GAEX,CACEN,GAAI,EACJI,MAAO,UACPC,KAAM,eACNC,QAAS,IC/BDC,EAAZ,SAAYA,GAAZ,OAAYA,EAAZ,QAAYA,EAAZ,mBAAYA,EAAZ,oBAAYA,EAAZ,YAAYA,CAAZ,M,qDCaaC,EAA+B,SAAC,GAMtC,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,UACAC,EACI,EADJA,cAsBA,OACE,wBACE,UAAQ,eACRC,UAAU,0CAFZ,UAIE,gCACE,6BACGC,OAAOC,OAAOT,GAAaU,KAAI,SAAAC,GAAU,OACxC,6BACE,uBAAMJ,UAAU,8BAAhB,UACGI,EAED,mBACEC,KAAK,KACLC,QAAS,YAlCzB,SAAsBC,GACpB,IACMC,EAAcZ,IAAWW,IAAgC,IAAfV,EAC1CY,EAAab,IAAWW,IAAgC,IAAfV,EAF5BD,IAAWW,IAK5BT,EAAUS,GACVR,GAAc,IAGZS,GACFT,GAAc,GAGZU,IACFX,OAAUY,GACVX,GAAc,GAEjB,CAiBiBY,CAAaP,EACd,EAJH,SAME,sBAAMJ,UAAU,OAAhB,SACE,mBACE,UAAQ,WACRA,UAAWY,IAAG,MAAO,CACnB,UAAWhB,IAAWQ,EACtB,aAAcR,IAAWQ,IACnBP,EACN,eAAgBD,IAAWQ,GACtBP,cAlBRO,EAD+B,QA8B9C,gCACGT,EAASQ,KAAI,gBAAGU,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAaC,EAAtB,wBACZ,qBAAI,UAAQ,UAAZ,UACE,oBAAIf,UAAU,uBAAuB,UAAQ,YAA7C,SACGe,EAAQ7B,KAGX,oBAAI,UAAQ,cAAZ,SAA2B6B,EAAQ5B,OACnC,oBAAI,UAAQ,kBAAZ,0BACM2B,QADN,IACMA,OADN,EACMA,EAAUvB,KADhB,qBAC0BuB,QAD1B,IAC0BA,OAD1B,EAC0BA,EAAUxB,SAGpC,oBACE,UAAQ,cACRU,UAAWY,IAAG,CACZ,gBAA+B,OAAV,OAAJC,QAAI,IAAJA,OAAA,EAAAA,EAAMzB,KACvB,kBAAiC,OAAV,OAAJyB,QAAI,IAAJA,OAAA,EAAAA,EAAMzB,OAJ7B,gBAOGyB,QAPH,IAOGA,OAPH,EAOGA,EAAM1B,SAjBgB4B,EAAQ7B,GADvB,QAyBrB,ECzFY8B,EAA2B,SAAC,GAOlC,IANLC,EAMI,EANJA,eACAC,EAKI,EALJA,kBACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,sBACAC,EACI,EADJA,yBA0BA,OACE,sBAAKtB,UAAU,QAAf,UACE,mBAAGA,UAAU,gBAAb,qBAEA,oBAAGA,UAAU,kCAAb,UACE,mBACE,UAAQ,iBACRK,KAAK,KACLL,UAAWY,IAAG,CACZ,aAAcK,IAEhBX,QAAS,WACPY,EAAkB,EACnB,EARH,iBAaCjC,EAAMkB,KAAI,SAAAU,GAAI,OACb,mBACE,UAAQ,aACRR,KAAK,KAELL,UAAWY,IAAG,CACZ,YAAaC,EAAK3B,KAAO+B,IAE3BX,QAAS,WACPY,EAAkBL,EAAK3B,GACxB,EATH,SAWG2B,EAAK1B,MARD0B,EAAK3B,GAJC,OAiBjB,qBAAKc,UAAU,cAAf,SACE,oBAAGA,UAAU,yCAAb,UACE,uBACE,UAAQ,cACRuB,KAAK,OACLvB,UAAU,QACVwB,YAAY,SACZC,MAAON,EACPO,SAAU,SAACC,GACTP,EAASO,EAAMC,OAAOH,MACvB,IAGH,sBAAMzB,UAAU,eAAhB,SACE,mBAAGA,UAAU,gBAAgB,cAAY,WAG1CmB,EAAMU,OAAS,GACd,sBAAM7B,UAAU,gBAAhB,SAEE,wBACE,UAAQ,cACRuB,KAAK,SACLvB,UAAU,SACVM,QAAS,WACPc,EAAS,GACV,WAQX,sBAAKpB,UAAU,gCAAf,UACE,mBACEK,KAAK,KACL,UAAQ,gBACRL,UAAWY,IAAG,yBAA0B,CACtC,cAAeS,EAAsBQ,OAAS,IAEhDvB,QAAS,WACPgB,EAAyB,GAC1B,EARH,iBAaCjC,EAAWc,KAAI,SAAAW,GAAQ,OACtB,mBACE,UAAQ,WACRd,UAAWY,IAAG,mBAAoB,CAChC,UAAWS,EAAsBS,SAAShB,EAAS5B,MAErDmB,KAAK,KAELC,QAAS,WAnHnB,IAA0ByB,IAoHGjB,EAAS5B,GAnHhCmC,EAAsBS,SAASC,GACjCT,EAAyBD,EAAsBW,QAAO,SAAA9C,GAAE,OACtDA,IAAO6C,CAD+C,KAIxDT,EAAyB,GAAD,mBAAKD,GAAL,CAA4BU,IA+G7C,EATH,SAWGjB,EAASxB,OALLwB,EAAS5B,GAPM,OAiB1B,qBAAKc,UAAU,cAAf,SACE,mBACE,UAAQ,iBACRK,KAAK,KACLL,UAAWY,IAAG,kCAAmC,CAC/C,UAAWK,GAAkBE,GACS,IAAjCE,EAAsBQ,SAE7BvB,QA1HR,WACMW,GACFC,EAAkB,GAGhBC,GACFC,EAAS,IAGPC,EAAsBQ,QACxBP,EAAyB,GAE5B,EAuGK,mCAcP,ECrJK3B,ECZ4B,CAChC,CACET,GAAI,EACJC,KAAM,OACN4C,WAAY,GAEd,CACE7C,GAAI,EACJC,KAAM,QACN4C,WAAY,GAEd,CACE7C,GAAI,EACJC,KAAM,OACN4C,WAAY,GAEd,CACE7C,GAAI,EACJC,KAAM,SACN4C,WAAY,GAEd,CACE7C,GAAI,EACJC,KAAM,QACN4C,WAAY,GAEd,CACE7C,GAAI,EACJC,KAAM,SACN4C,WAAY,GAEd,CACE7C,GAAI,EACJC,KAAM,OACN4C,WAAY,GAEd,CACE7C,GAAI,EACJC,KAAM,QACN4C,WAAY,GAEd,CACE7C,GAAI,EACJC,KAAM,SACN4C,WAAY,IDhC+B5B,KAAI,SAACY,GAClD,IAAMD,EAAWzB,EAAW4C,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,KAAO6B,EAAQgB,UAArB,KAC7B,KACClB,EAAO5B,EAAMgD,MAAK,SAAAE,GAAC,OAAIA,EAAEjD,MAAF,OAAS4B,QAAT,IAASA,OAAT,EAASA,EAAUtB,QAAvB,KACpB,KAEL,OAAO,2BACFuB,GADL,IAEED,WACAD,QAEH,IA6EYuB,EAAgB,WAC3B,MAA4CC,mBAAS,GAArD,mBAAOpB,EAAP,KAAuBC,EAAvB,KACA,EAA0BmB,mBAAS,IAAnC,mBAAOlB,EAAP,KAAcC,EAAd,KACA,EAA0DiB,mBAExD,IAFF,mBAAOhB,EAAP,KAA8BC,EAA9B,KAGA,EAA4Be,qBAA5B,mBAAOzC,EAAP,KAAeE,EAAf,KACA,EAAoCuC,oBAAS,GAA7C,mBAAOxC,EAAP,KAAmBE,EAAnB,KAEMuC,EA3EmB,SAAC,GAOa,IANvCC,EAMsC,EANtCA,MACAtB,EAKsC,EALtCA,eACAE,EAIsC,EAJtCA,MACAE,EAGsC,EAHtCA,sBACAzB,EAEsC,EAFtCA,OACAC,EACsC,EADtCA,WAEIyC,EAAe,YAAOC,GAQ1B,GANItB,IACFqB,EAAkBA,EAAgBN,QAAO,SAAAjB,GAAO,aAC9C,UAAAA,EAAQF,YAAR,eAAc3B,MAAO+B,CADyB,KAK9CE,EAAO,CACT,IAAMqB,EAAkBrB,EAAMsB,OAAOC,cAErCJ,EAAkBA,EAAgBN,QAAO,SAAAjB,GAAO,OAC9CA,EAAQ5B,KAAKuD,cAAcZ,SAASU,EADU,GAGjD,CAyCD,OAvCInB,EAAsBQ,OAAS,IACjCS,EAAkBA,EAAgBN,QAAO,SAAAjB,GAAO,OAC9CM,EAAsBS,SAASf,EAAQgB,WADO,KAK9CnC,IACF0C,EAAgBK,MAAK,SAACC,EAAGC,GACvB,OAAQjD,GACN,KAAKH,EAAYqD,GACf,OAAOF,EAAE1D,GAAK2D,EAAE3D,GAElB,KAAKO,EAAYsD,SACf,OAAOH,EAAEzD,KAAK6D,cAAcH,EAAE1D,MAEhC,KAAKM,EAAYwD,SACf,OAAKL,EAAE9B,UAAa+B,EAAE/B,SAIf8B,EAAE9B,SAASxB,MAAM0D,cAAcH,EAAE/B,SAASxB,OAHxC,EAKX,KAAKG,EAAYyD,KACf,OAAKN,EAAE/B,MAASgC,EAAEhC,KAIX+B,EAAE/B,KAAK1B,KAAK6D,cAAcH,EAAEhC,KAAK1B,MAH/B,EAKX,QACE,OAAO,EAEZ,IAEGU,GACFyC,EAAgBa,WAIbb,CACR,CAWyBc,CAAmB,CACzCb,MAAO5C,EACPsB,iBACAE,QACAE,wBACAzB,SACAC,eAGF,OACE,qBAAKG,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,gCAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEiB,eAAgBA,EAChBI,sBAAuBA,EACvBD,SAAUA,EACVD,MAAOA,EACPG,yBAA0BA,EAC1BJ,kBAAmBA,MAIvB,qBAAKlB,UAAU,sBAAf,SACGsC,EAAgBT,OAAS,EACxB,cAAC,EAAD,CACElC,SAAU2C,EACV1C,OAAQA,EACRC,WAAYA,EACZE,cAAeA,EACfD,UAAWA,IAGb,mBAAG,UAAQ,oBAAX,0DAQX,EEjJDuD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.613433a7.chunk.js","sourcesContent":["import { User } from '../types/User';\n\nexport const users: User[] = [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","import { Category } from '../types/Category';\n\nexport const categories: Category[] = [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","export enum ColumnNames {\n  ID = 'ID',\n  Products = 'Product',\n  Category = 'Category',\n  User = 'User',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { ColumnNames } from '../types/ColumnNames';\nimport { Product } from '../types/Product';\n\ntype Props = {\n  products: Product[];\n  sortBy?: ColumnNames;\n  isReversed: boolean;\n  setSortBy: (value?: ColumnNames) => void;\n  setIsReversed: (value: boolean) => void;\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  products,\n  sortBy,\n  isReversed,\n  setSortBy,\n  setIsReversed,\n}) => {\n  function toggleSortBy(newColumnName: ColumnNames) {\n    const firstClick = sortBy !== newColumnName;\n    const secondClick = sortBy === newColumnName && isReversed === false;\n    const thirdClick = sortBy === newColumnName && isReversed === true;\n\n    if (firstClick) {\n      setSortBy(newColumnName);\n      setIsReversed(false);\n    }\n\n    if (secondClick) {\n      setIsReversed(true);\n    }\n\n    if (thirdClick) {\n      setSortBy(undefined);\n      setIsReversed(false);\n    }\n  }\n\n  return (\n    <table\n      data-cy=\"ProductTable\"\n      className=\"table is-striped is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {Object.values(ColumnNames).map(columnName => (\n            <th key={columnName}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {columnName}\n\n                <a\n                  href=\"#/\"\n                  onClick={() => {\n                    toggleSortBy(columnName);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i\n                      data-cy=\"SortIcon\"\n                      className={cn('fas', {\n                        'fa-sort': sortBy !== columnName,\n                        'fa-sort-up': sortBy === columnName\n                          && !isReversed,\n                        'fa-sort-down': sortBy === columnName\n                          && isReversed,\n                      })}\n                    />\n                  </span>\n                </a>\n              </span>\n            </th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {products.map(({ user, category, ...product }) => (\n          <tr data-cy=\"Product\" key={product.id}>\n            <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n              {product.id}\n            </td>\n\n            <td data-cy=\"ProductName\">{product.name}</td>\n            <td data-cy=\"ProductCategory\">\n              {`${category?.icon} - ${category?.title}`}\n            </td>\n\n            <td\n              data-cy=\"ProductUser\"\n              className={cn({\n                'has-text-link': user?.sex === 'm',\n                'has-text-danger': user?.sex === 'f',\n              })}\n            >\n              {user?.name}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { categories } from '../api/categories';\nimport { users } from '../api/users';\n\ntype Props = {\n  selectedUserId: number;\n  setSelectedUserId: (value: number) => void;\n  query: string;\n  setQuery: (value: string) => void;\n  selectedCategoriesIds: number[];\n  setSelectedCategoriesIds: (value: number[]) => void;\n};\n\nexport const Filters: React.FC<Props> = ({\n  selectedUserId,\n  setSelectedUserId,\n  query,\n  setQuery,\n  selectedCategoriesIds,\n  setSelectedCategoriesIds,\n}) => {\n  function toggleCategories(categoryId: number) {\n    if (selectedCategoriesIds.includes(categoryId)) {\n      setSelectedCategoriesIds(selectedCategoriesIds.filter(id => (\n        id !== categoryId\n      )));\n    } else {\n      setSelectedCategoriesIds([...selectedCategoriesIds, categoryId]);\n    }\n  }\n\n  function resetAll() {\n    if (selectedUserId) {\n      setSelectedUserId(0);\n    }\n\n    if (query) {\n      setQuery('');\n    }\n\n    if (selectedCategoriesIds.length) {\n      setSelectedCategoriesIds([]);\n    }\n  }\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs has-text-weight-bold\">\n        <a\n          data-cy=\"FilterAllUsers\"\n          href=\"#/\"\n          className={cn({\n            'is-active': !selectedUserId,\n          })}\n          onClick={() => {\n            setSelectedUserId(0);\n          }}\n        >\n          All\n        </a>\n\n        {users.map(user => (\n          <a\n            data-cy=\"FilterUser\"\n            href=\"#/\"\n            key={user.id}\n            className={cn({\n              'is-active': user.id === selectedUserId,\n            })}\n            onClick={() => {\n              setSelectedUserId(user.id);\n            }}\n          >\n            {user.name}\n          </a>\n        ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left has-icons-right\">\n          <input\n            data-cy=\"SearchField\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={(event) => {\n              setQuery(event.target.value);\n            }}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n\n          {query.length > 0 && (\n            <span className=\"icon is-right\">\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  setQuery('');\n                }}\n              />\n            </span>\n          )}\n\n        </p>\n      </div>\n\n      <div className=\"panel-block is-flex-wrap-wrap\">\n        <a\n          href=\"#/\"\n          data-cy=\"AllCategories\"\n          className={cn('button is-success mr-6', {\n            'is-outlined': selectedCategoriesIds.length > 0,\n          })}\n          onClick={() => {\n            setSelectedCategoriesIds([]);\n          }}\n        >\n          All\n        </a>\n\n        {categories.map(category => (\n          <a\n            data-cy=\"Category\"\n            className={cn('button mr-2 my-1', {\n              'is-info': selectedCategoriesIds.includes(category.id),\n            })}\n            href=\"#/\"\n            key={category.id}\n            onClick={() => {\n              toggleCategories(category.id);\n            }}\n          >\n            {category.title}\n          </a>\n        ))}\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          data-cy=\"ResetAllButton\"\n          href=\"#/\"\n          className={cn('button is-fullwidth is-outlined', {\n            'is-link': selectedUserId || query\n              || selectedCategoriesIds.length !== 0,\n          })}\n          onClick={resetAll}\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from 'react';\nimport './App.scss';\n\nimport { users } from './api/users';\nimport { categories } from './api/categories';\nimport { productsFromServer } from './api/products';\nimport { Product } from './types/Product';\nimport { ColumnNames } from './types/ColumnNames';\nimport { PeopleTable } from './components/PeopleTable';\nimport { Filters } from './components/Filters';\n\nconst products: Product[] = productsFromServer.map((product) => {\n  const category = categories.find(c => c.id === product.categoryId)\n    || null;\n  const user = users.find(u => u.id === category?.ownerId)\n    || null;\n\n  return {\n    ...product,\n    category,\n    user,\n  };\n});\n\ninterface ProductsFilterOptions {\n  goods: Product[],\n  selectedUserId: number,\n  query: string,\n  selectedCategoriesIds: number[],\n  sortBy?: ColumnNames,\n  isReversed: boolean,\n}\n\nconst getVisibleProducts = ({\n  goods,\n  selectedUserId,\n  query,\n  selectedCategoriesIds,\n  sortBy,\n  isReversed,\n}: ProductsFilterOptions): Product[] => {\n  let visibleProducts = [...goods];\n\n  if (selectedUserId) {\n    visibleProducts = visibleProducts.filter(product => (\n      product.user?.id === selectedUserId\n    ));\n  }\n\n  if (query) {\n    const normalizedQuery = query.trim().toLowerCase();\n\n    visibleProducts = visibleProducts.filter(product => (\n      product.name.toLowerCase().includes(normalizedQuery)\n    ));\n  }\n\n  if (selectedCategoriesIds.length > 0) {\n    visibleProducts = visibleProducts.filter(product => (\n      selectedCategoriesIds.includes(product.categoryId)\n    ));\n  }\n\n  if (sortBy) {\n    visibleProducts.sort((a, b) => {\n      switch (sortBy) {\n        case ColumnNames.ID:\n          return a.id - b.id;\n\n        case ColumnNames.Products:\n          return a.name.localeCompare(b.name);\n\n        case ColumnNames.Category:\n          if (!a.category || !b.category) {\n            return 0;\n          }\n\n          return a.category.title.localeCompare(b.category.title);\n\n        case ColumnNames.User:\n          if (!a.user || !b.user) {\n            return 0;\n          }\n\n          return a.user.name.localeCompare(b.user.name);\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleProducts.reverse();\n    }\n  }\n\n  return visibleProducts;\n};\n\nexport const App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [query, setQuery] = useState('');\n  const [selectedCategoriesIds, setSelectedCategoriesIds] = useState<\n  number[]\n  >([]);\n  const [sortBy, setSortBy] = useState<ColumnNames>();\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleProducts = getVisibleProducts({\n    goods: products,\n    selectedUserId,\n    query,\n    selectedCategoriesIds,\n    sortBy,\n    isReversed,\n  });\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <Filters\n            selectedUserId={selectedUserId}\n            selectedCategoriesIds={selectedCategoriesIds}\n            setQuery={setQuery}\n            query={query}\n            setSelectedCategoriesIds={setSelectedCategoriesIds}\n            setSelectedUserId={setSelectedUserId}\n          />\n        </div>\n\n        <div className=\"box table-container\">\n          {visibleProducts.length > 0 ? (\n            <PeopleTable\n              products={visibleProducts}\n              sortBy={sortBy}\n              isReversed={isReversed}\n              setIsReversed={setIsReversed}\n              setSortBy={setSortBy}\n            />\n          ) : (\n            <p data-cy=\"NoMatchingMessage\">\n              No products matching selected criteria\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const productsFromServer = [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}